{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"Studio.libraries['react']\"","webpack:///external \"Studio\"","webpack:///./studio/AssetUploadButton.js","webpack:///./studio/OfficeAssetEditor.js","webpack:///./studio/AssetEditor.scss","webpack:///./studio/main_dev.js","webpack:///./studio/AssetEditor.js","webpack:///external \"Studio.libraries['superagent']\"","webpack:///external \"Studio.libraries['bluebird']\"","webpack:///./node_modules/react-copy-to-clipboard/lib/index.js","webpack:///./node_modules/react-copy-to-clipboard/lib/Component.js","webpack:///./node_modules/copy-to-clipboard/index.js","webpack:///./node_modules/toggle-selection/index.js","webpack:///./studio/NewAssetModal.js","webpack:///./studio/AssetProperties.js"],"names":["_fileUploadButton","AssetUploadButton","e","target","files","length","assetDefaults","targetAsset","uploadCallback","file","reader","FileReader","onloadend","refs","value","type","Studio","workspaces","save","asset","Object","assign","content","result","substring","indexOf","name","api","post","data","response","__entitySet","addExistingEntity","openTab","updateEntity","patch","_id","link","loadEntity","onerror","errMsg","Error","alert","readAsDataURL","defaults","opts","targetAssetIdAndName","props","tab","entity","dispatchEvent","MouseEvent","window","display","upload","renderUpload","openFileDialog","undefined","Component","Preview","OfficeAssetEditor","state","loading","previewOpen","extensions","assets","options","officePreview","enabled","previewEnabled","isPreviewEnabled","showWarning","getSettingValueByKey","setSetting","openModal","clearPreview","preview","startProgress","setState","done","stopProgress","displayName","emptyMessage","icon","visibleName","style","toolbarContainer","margin","marginLeft","resolveUrl","OpenUpload","wasOpen","onOfficeAssetLoad","padding","addEntitySet","faIcon","onNew","NewAssetModal","referenceAttributes","entityTreePosition","addEditorComponent","AssetEditor","addToolbarComponent","addPropertiesComponent","AssetProperties","title","entityTreeIconResolvers","push","parts","split","extension","isSharedHelper","binaryExtensions","getTextFromApi","path","Promise","resolve","reject","request","superagent","get","end","err","text","toString","saveEntity","responseType","ab","str","String","fromCharCode","apply","Uint8Array","fixedStr","decodeURIComponent","escape","btoa","unescape","encodeURIComponent","loadingFinished","prevProps","message","match","isImage","resolveEntityPath","isFont","getFormat","overflow","Date","getTime","newStyle","document","createElement","appendChild","createTextNode","head","fontFamily","isPdf","height","isOfficeFile","includes","renderBinary","mode","forceUpdate","atob","v","onUpdate","downloadUrl","customEditor","getEmbeddingCode","toolbarButton","marginRight","renderEditor","isLink","key","createAsset","setTimeout","focus","error","fragments","close","handleKeyPress","allowAssetsLinkedToFiles","color","opacity","OpenUploadNew","propTypes","PropTypes","func","isRequired","onChange","checked","entities"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = Studio.libraries['react'];","module.exports = Studio;","import React, { Component } from 'react'\nimport Studio from 'jsreport-studio'\n\nlet _fileUploadButton\n\nexport default class AssetUploadButton extends Component {\n  // we need to have global action in main_dev which is triggered when users clicks on + on images\n  // this triggers invisible button in the toolbar\n  static OpenUpload (opts) {\n    _fileUploadButton.openFileDialog('edit', undefined, opts)\n  }\n\n  static OpenUploadNew (defaults, opts) {\n    _fileUploadButton.openFileDialog('new', defaults, opts)\n  }\n\n  componentDidMount () {\n    _fileUploadButton = this\n  }\n\n  upload (e) {\n    if (!e.target.files.length) {\n      return\n    }\n\n    const assetDefaults = e.target.assetDefaults\n    const targetAsset = e.target.targetAsset\n    const uploadCallback = e.target.uploadCallback\n\n    delete e.target.assetDefaults\n    delete e.target.targetAsset\n    delete e.target.uploadCallback\n\n    const file = e.target.files[0]\n    const reader = new FileReader()\n\n    reader.onloadend = async () => {\n      this.refs.file.value = ''\n\n      if (this.type === 'new') {\n        if (Studio.workspaces) {\n          await Studio.workspaces.save()\n        }\n\n        let asset = {}\n\n        if (assetDefaults != null) {\n          asset = Object.assign(asset, assetDefaults)\n        }\n\n        asset = Object.assign(asset, {\n          content: reader.result.substring(reader.result.indexOf('base64,') + 'base64,'.length),\n          name: file.name\n        })\n\n        let response = await Studio.api.post('/odata/assets', {\n          data: asset\n        })\n\n        response.__entitySet = 'assets'\n\n        Studio.addExistingEntity(response)\n        Studio.openTab(Object.assign({}, response))\n      }\n\n      if (this.type === 'edit') {\n        if (Studio.workspaces) {\n          Studio.updateEntity({\n            name: targetAsset.name,\n            content: reader.result.substring(reader.result.indexOf('base64,') + 'base64,'.length)\n          })\n\n          await Studio.workspaces.save()\n        } else {\n          await Studio.api.patch(`/odata/assets(${targetAsset._id})`, {\n            data: {\n              content: reader.result.substring(reader.result.indexOf('base64,') + 'base64,'.length),\n              link: null\n            }\n          })\n          Studio.loadEntity(targetAsset._id, true)\n        }\n      }\n\n      if (uploadCallback) {\n        uploadCallback()\n      }\n    }\n\n    reader.onerror = function () {\n      const errMsg = 'There was an error reading the file!'\n\n      if (uploadCallback) {\n        uploadCallback(new Error(errMsg))\n      }\n\n      alert(errMsg)\n    }\n\n    reader.readAsDataURL(file)\n  }\n\n  openFileDialog (type, defaults, opts = {}) {\n    const targetAssetIdAndName = opts.targetAsset\n\n    this.type = type\n\n    if (defaults) {\n      this.refs.file.assetDefaults = defaults\n    } else {\n      delete this.refs.file.assetDefaults\n    }\n\n    if (targetAssetIdAndName) {\n      this.refs.file.targetAsset = targetAssetIdAndName\n    } else {\n      this.refs.file.targetAsset = {\n        _id: this.props.tab.entity._id,\n        name: this.props.tab.entity.name\n      }\n    }\n\n    if (opts.uploadCallback) {\n      this.refs.file.uploadCallback = opts.uploadCallback\n    } else {\n      delete this.refs.file.uploadCallback\n    }\n\n    this.refs.file.dispatchEvent(new MouseEvent('click', {\n      'view': window,\n      'bubbles': false,\n      'cancelable': true\n    }))\n  }\n\n  renderUpload () {\n    return <input type='file' key='file' ref='file' style={{display: 'none'}} onChange={(e) => this.upload(e)} />\n  }\n\n  render () {\n    return this.renderUpload(true)\n  }\n}\n","import React, { Component } from 'react'\nimport AssetUploadButton from './AssetUploadButton'\nimport Studio from 'jsreport-studio'\nimport style from './AssetEditor.scss'\n\nconst Preview = Studio.Preview\n\nclass OfficeAssetEditor extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      loading: false,\n      previewOpen: false\n    }\n  }\n\n  isPreviewEnabled () {\n    return Studio.extensions.assets.options.officePreview.enabled !== false\n  }\n\n  preview (entity) {\n    const previewEnabled = this.isPreviewEnabled()\n\n    if (!previewEnabled) {\n      return\n    }\n\n    if (\n      Studio.extensions.assets.options.officePreview.showWarning !== false &&\n      Studio.getSettingValueByKey('office-preview-informed', false) === false\n    ) {\n      Studio.setSetting('office-preview-informed', true)\n\n      Studio.openModal(() => (\n        <div>\n          We need to upload your office asset to our publicly hosted server to be able to use\n          Office Online Service for previewing here in the studio. You can disable it in the configuration, see <a\n            href='https://jsreport.net/learn/xlsx#preview-in-studio' target='_blank'>the docs</a> for details.\n        </div>\n      ))\n    }\n\n    if (this.state.previewOpen) {\n      this.clearPreview(() => {\n        this.preview(entity)\n      })\n    } else {\n      Studio.startProgress()\n\n      this.setState({\n        loading: true,\n        previewOpen: true\n      })\n    }\n  }\n\n  clearPreview (done) {\n    this.setState({\n      previewOpen: false\n    }, () => done && done())\n  }\n\n  onOfficeAssetLoad () {\n    Studio.stopProgress()\n\n    this.setState({\n      loading: false\n    })\n  }\n\n  render () {\n    const previewEnabled = this.isPreviewEnabled()\n    const { loading, previewOpen } = this.state\n    const { entity, displayName, emptyMessage, icon } = this.props\n\n    let visibleName = displayName\n\n    if (!visibleName && entity) {\n      visibleName = entity.name\n    }\n\n    if (!visibleName) {\n      visibleName = '<none>'\n    }\n\n    return (\n      <div className='block'>\n        <div className={style.toolbarContainer}>\n          <h3 style={{ display: 'inline-block', margin: '0px', marginLeft: '0.6rem' }}><i className={`fa ${icon || 'fa-file-o'}`} /> {visibleName}</h3>\n          {entity != null && (\n            <a className='button confirmation' target='_blank' href={Studio.resolveUrl(`assets/${entity._id}/content?download=true`)}>\n              <i className='fa fa-download' /> Download\n            </a>\n          )}\n          {entity != null && (\n            <button className='button confirmation' onClick={() => AssetUploadButton.OpenUpload({\n              targetAsset: {\n                _id: entity._id,\n                name: entity.name\n              },\n              uploadCallback: () => {\n                const wasOpen = this.state.previewOpen\n\n                this.clearPreview(() => {\n                  if (wasOpen) {\n                    this.preview(entity)\n                  }\n                })\n              }\n            })}>\n              <i className='fa fa-upload' /> Upload\n            </button>\n          )}\n          {entity != null && (\n            <button className={`button confirmation ${!previewEnabled || loading ? 'disabled' : ''}`} onClick={() => this.preview(entity)}>\n              <i className={`fa fa-${loading ? '' : previewOpen ? 'retweet' : 'search'}`} /> {loading ? 'Loading..' : previewOpen ? 'Refresh' : 'Preview'}\n            </button>\n          )}\n          {entity != null && previewOpen && !loading && (\n            <button className={`button confirmation ${!previewEnabled || loading ? 'disabled' : ''}`} onClick={() => this.clearPreview()}>\n              <i className='fa fa-times' /> Clear\n            </button>\n          )}\n        </div>\n        {entity != null && previewOpen && (\n          <Preview\n            ref='officeAssetPreview'\n            onLoad={() => this.onOfficeAssetLoad()}\n            initialSrc={Studio.resolveUrl(`assets/office/${entity._id}/content`)}\n          />\n        )}\n        {entity == null && (\n          <div style={{ padding: '2rem' }}>\n            <i>{emptyMessage != null ? emptyMessage : 'Asset is empty'}</i>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default OfficeAssetEditor\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbarContainer\":\"ASSETS-AssetEditor-toolbarContainer\",\"toolbarButton\":\"ASSETS-AssetEditor-toolbarButton\"};","import AssetEditor from './AssetEditor.js'\nimport OfficeAssetEditor from './OfficeAssetEditor'\nimport AssetUploadButton from './AssetUploadButton.js'\nimport NewAssetModal from './NewAssetModal.js'\nimport AssetProperties from './AssetProperties.js'\nimport Studio from 'jsreport-studio'\n\nStudio.addEntitySet({\n  name: 'assets',\n  faIcon: 'fa-file',\n  visibleName: 'asset',\n  onNew: (options) => Studio.openModal(NewAssetModal, options),\n  referenceAttributes: ['isSharedHelper'],\n  entityTreePosition: 700\n})\n\nStudio.addEditorComponent('assets', AssetEditor)\n\nStudio.addEditorComponent('officeAsset', OfficeAssetEditor)\n\nStudio.addToolbarComponent(AssetUploadButton)\nStudio.addPropertiesComponent(AssetProperties.title, AssetProperties, (entity) => entity.__entitySet === 'assets')\n\nStudio.entityTreeIconResolvers.push((entity) => {\n  if (entity.__entitySet !== 'assets') {\n    return\n  }\n\n  const parts = entity.name.split('.')\n\n  if (parts.length === 1) {\n    return\n  }\n\n  const extension = parts[parts.length - 1]\n\n  switch (extension) {\n    case 'html': return 'fa-html5'\n    case 'jpg':\n    case 'jpeg':\n    case 'png':\n    case 'gif':\n    case 'svg': return 'fa-camera'\n    case 'js': return entity.isSharedHelper ? 'fa-cogs' : 'fa-cog'\n    case 'css': return 'fa-css3'\n    default: return 'fa-file-o '\n  }\n})\n","import React, { Component } from 'react'\r\nimport AssetUploadButton from './AssetUploadButton.js'\r\nimport Studio, { TextEditor } from 'jsreport-studio'\r\nimport superagent from 'superagent'\r\nimport Promise from 'bluebird'\r\nimport CopyToClipboard from 'react-copy-to-clipboard'\r\nimport OfficeAssetEditor from './OfficeAssetEditor'\r\nimport binaryExtensions from 'binary-extensions'\r\nimport style from './AssetEditor.scss'\r\n\r\nbinaryExtensions.push('p12')\r\n\r\n// Studio.api currently always open dialogs on failures and that is what we don't want, so arbitrary implementaiton here\r\nconst getTextFromApi = (path) => {\r\n  return new Promise((resolve, reject) => {\r\n    const request = superagent.get(Studio.resolveUrl(path))\r\n    request.end((err, { text } = {}) => err ? reject(new Error(text || err.toString())) : resolve(text))\r\n  })\r\n}\r\n\r\nclass AssetEditor extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = { }\r\n  }\r\n\r\n  async componentDidMount () {\r\n    const { entity } = this.props\r\n\r\n    var content = entity.content\r\n\r\n    if (entity.link) {\r\n      await Studio.saveEntity(entity._id)\r\n      const ab = await Studio.api.get(`assets/${entity._id}/content`, { responseType: 'arraybuffer' })\r\n      const str = String.fromCharCode.apply(null, new Uint8Array(ab))\r\n      const fixedStr = decodeURIComponent(escape(str))\r\n      content = btoa(unescape(encodeURIComponent(fixedStr)))\r\n    }\r\n\r\n    this.setState({ content, loadingFinished: true })\r\n  }\r\n\r\n  async componentDidUpdate (prevProps) {\r\n    const { entity } = this.props\r\n\r\n    if (entity.link && (!this.state.link || prevProps.entity.link !== entity.link)) {\r\n      try {\r\n        const link = await getTextFromApi(`assets/link/${encodeURIComponent(entity.link)}`)\r\n        this.setState({ link: link })\r\n      } catch (e) {\r\n        this.setState({ link: e.message })\r\n      }\r\n    }\r\n  }\r\n\r\n  isOfficeFile (entity) {\r\n    return entity.name.match(/\\.(docx|xlsx|pptx)$/) != null\r\n  }\r\n\r\n  isImage (entity) {\r\n    return entity.name.match(/\\.(jpeg|jpg|gif|png|svg)$/) != null\r\n  }\r\n\r\n  isFont (entity) {\r\n    return entity.name.match(/\\.(otf|woff|ttf|eot|woff2)$/) != null\r\n  }\r\n\r\n  isPdf (entity) {\r\n    return entity.name.match(/\\.(pdf)$/) != null\r\n  }\r\n\r\n  getFormat (extension) {\r\n    switch (extension) {\r\n      case 'ttf': return 'truetype'\r\n      case 'woff2': return 'woff2'\r\n      case 'eot': return 'embedded-opentype'\r\n      default: return 'woff'\r\n    }\r\n  }\r\n\r\n  getEmbeddingCode (entity) {\r\n    let parts = entity.name.split('.')\r\n    let extension = parts[parts.length - 1]\r\n\r\n    if (this.isImage(entity)) {\r\n      return `<img src=\"{#asset ${Studio.resolveEntityPath(entity)} @encoding=dataURI}\" />`\r\n    }\r\n\r\n    if (this.isFont(entity)) {\r\n      return `@font-face {\r\n  font-family: '${parts[0]}';\r\n  src: url({#asset ${Studio.resolveEntityPath(entity)} @encoding=dataURI});\r\n  format('${this.getFormat(extension)}');\r\n}`\r\n    }\r\n\r\n    return `{#asset ${Studio.resolveEntityPath(entity)} @encoding=utf8}`\r\n  }\r\n\r\n  renderBinary (entity) {\r\n    return (\r\n      <div className='custom-editor'>\r\n        <div>\r\n          <h1><i className='fa fa-file-o' /> {entity.name}</h1>\r\n        </div>\r\n        <div>\r\n          <a className='button confirmation' target='_blank' href={Studio.resolveUrl(`assets/${entity._id}/content?download=true`)} title='Download'>\r\n            <i className='fa fa-download' /> Download\r\n          </a>\r\n          <button className='button confirmation' onClick={() => AssetUploadButton.OpenUpload()}>\r\n            <i className='fa fa-upload' /> Upload\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderEditor (entity) {\r\n    let parts = entity.name.split('.')\r\n    let extension = parts[parts.length - 1]\r\n\r\n    if (this.isImage(entity)) {\r\n      return (\r\n        <div style={{overflow: 'auto'}}>\r\n          <img\r\n            src={Studio.resolveUrl(`assets/${entity._id}/content?v=${new Date().getTime()}`)}\r\n            style={{display: 'block', margin: '3rem auto'}}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (this.isFont(entity)) {\r\n      let newStyle = document.createElement('style')\r\n\r\n      newStyle.appendChild(document.createTextNode(`@font-face {\r\n         font-family: '${parts[0]}';\r\n         src: url('${Studio.resolveUrl(`/assets/${entity._id}/content`)}');\r\n         format('${extension === 'ttf' ? 'truetype' : 'woff'}');\r\n        }`))\r\n\r\n      document.head.appendChild(newStyle)\r\n\r\n      return (\r\n        <div style={{overflow: 'auto', fontFamily: parts[0], padding: '2rem'}}><h1> Hello world font {entity.name}</h1>\r\n          <p>\r\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's\r\n            standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to\r\n            make a type specimen book.\r\n          </p>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (this.isPdf(entity)) {\r\n      return (\r\n        <div className='block' style={{height: '100%'}}>\r\n          <object style={{height: '100%'}} data={Studio.resolveUrl(`assets/${entity._id}/content?v=${new Date().getTime()}`)} type='application/pdf'>\r\n            <embed src={Studio.resolveUrl(`assets/${entity._id}/content?v=${new Date().getTime()}`)} type='application/pdf' />\r\n          </object>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (this.isOfficeFile(entity)) {\r\n      return <OfficeAssetEditor entity={entity} />\r\n    }\r\n\r\n    if (entity.name.split('.').length > 1 && binaryExtensions.includes(entity.name.split('.')[1])) {\r\n      return this.renderBinary(entity)\r\n    }\r\n\r\n    let mode = parts[parts.length - 1]\r\n\r\n    if (extension === 'js') {\r\n      mode = 'javascript'\r\n    }\r\n\r\n    if (extension === 'html') {\r\n      mode = 'handlebars'\r\n    }\r\n\r\n    const content = ((entity.content || entity.forceUpdate) ? entity.content : this.state.content) || ''\r\n\r\n    return (\r\n      <TextEditor\r\n        name={entity._id}\r\n        mode={mode}\r\n        value={decodeURIComponent(escape(atob(content)))}\r\n        onUpdate={(v) => this.props.onUpdate(Object.assign({}, entity, {content: btoa(unescape(encodeURIComponent(v))), forceUpdate: true}))}\r\n      />\r\n    )\r\n  }\r\n\r\n  render () {\r\n    const { entity } = this.props\r\n    const { link, loadingFinished } = this.state\r\n    const downloadUrl = Studio.resolveUrl(`assets/${entity._id}/content?download=true`)\r\n\r\n    if (!loadingFinished) {\r\n      return <div />\r\n    }\r\n\r\n    let customEditor = this.isOfficeFile(entity)\r\n\r\n    return (\r\n      <div className='block'>\r\n        {!customEditor && (\r\n          <div className={style.toolbarContainer}>\r\n            <div>\r\n              <CopyToClipboard text={this.getEmbeddingCode(entity)}>\r\n                <a className={`button ${style.toolbarButton}`} title='Coppy the embedding code to clipboard'>\r\n                  <i className='fa fa-clipboard' />\r\n                </a>\r\n              </CopyToClipboard>\r\n              <a className={`button ${style.toolbarButton}`} target='_blank' href={downloadUrl} title='Download asset'>\r\n                <i className='fa fa-download' />\r\n              </a>\r\n              {entity.link ? (\r\n                <span style={{ margin: '0.6rem' }}>{link}</span>\r\n              ) : (\r\n                <a className={`button ${style.toolbarButton}`} title='Upload asset' onClick={() => AssetUploadButton.OpenUpload()}>\r\n                  <i className='fa fa-upload' />\r\n                </a>\r\n              )}\r\n              <a className={`button ${style.toolbarButton}`} style={{ marginRight: 'auto' }} target='_blank' title='Help' href='http://jsreport.net/learn/assets'>\r\n                <i className='fa fa-question' />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.renderEditor(entity)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AssetEditor\r\n","module.exports = Studio.libraries['superagent'];","module.exports = Studio.libraries['bluebird'];","'use strict';\n\nvar _require = require('./Component'),\n    CopyToClipboard = _require.CopyToClipboard;\n\nmodule.exports = CopyToClipboard;\n//# sourceMappingURL=index.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CopyToClipboard = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _copyToClipboard = require('copy-to-clipboard');\n\nvar _copyToClipboard2 = _interopRequireDefault(_copyToClipboard);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar CopyToClipboard = _react2.default.createClass({\n  displayName: 'CopyToClipboard',\n\n  propTypes: {\n    text: _react2.default.PropTypes.string.isRequired,\n    children: _react2.default.PropTypes.element.isRequired,\n    onCopy: _react2.default.PropTypes.func,\n    options: _react2.default.PropTypes.shape({\n      debug: _react2.default.PropTypes.bool,\n      message: _react2.default.PropTypes.string\n    })\n  },\n\n  onClick: function onClick(event) {\n    var _props = this.props,\n        text = _props.text,\n        onCopy = _props.onCopy,\n        children = _props.children,\n        options = _props.options;\n\n\n    var elem = _react2.default.Children.only(children);\n\n    var result = (0, _copyToClipboard2.default)(text, options);\n\n    if (onCopy) {\n      onCopy(text, result);\n    }\n\n    // Bypass onClick if it was present\n    if (elem && elem.props && typeof elem.props.onClick === 'function') {\n      elem.props.onClick(event);\n    }\n  },\n  render: function render() {\n    var _props2 = this.props,\n        _text = _props2.text,\n        _onCopy = _props2.onCopy,\n        _options = _props2.options,\n        children = _props2.children,\n        props = _objectWithoutProperties(_props2, ['text', 'onCopy', 'options', 'children']);\n\n    var elem = _react2.default.Children.only(children);\n\n    return _react2.default.cloneElement(elem, _extends({}, props, { onClick: this.onClick }));\n  }\n});\nexports.CopyToClipboard = CopyToClipboard;\n//# sourceMappingURL=Component.js.map","'use strict';\n\nvar deselectCurrent = require('toggle-selection');\n\nvar defaultMessage = 'Copy to clipboard: #{key}, Enter';\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug, message, reselectPrevious, range, selection, mark, success = false;\n  if (!options) { options = {}; }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement('span');\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = 'unset';\n    // prevents scrolling to the end of the page\n    mark.style.position = 'fixed';\n    mark.style.top = 0;\n    mark.style.clip = 'rect(0, 0, 0, 0)';\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = 'pre';\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = 'text';\n    mark.style.MozUserSelect = 'text';\n    mark.style.msUserSelect = 'text';\n    mark.style.userSelect = 'text';\n\n    document.body.appendChild(mark);\n\n    range.selectNode(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand('copy');\n    if (!successful) {\n      throw new Error('copy command was unsuccessful');\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error('unable to copy using execCommand: ', err);\n    debug && console.warn('trying IE specific stuff');\n    try {\n      window.clipboardData.setData('text', text);\n      success = true;\n    } catch (err) {\n      debug && console.error('unable to copy using clipboardData: ', err);\n      debug && console.error('falling back to prompt');\n      message = format('message' in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == 'function') {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","import React, {Component, PropTypes} from 'react'\r\nimport AssetUploadButton from './AssetUploadButton.js'\r\nimport Studio from 'jsreport-studio'\r\n\r\nexport default class NewAssetModal extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = { isLink: false }\r\n  }\r\n\r\n  handleKeyPress (e) {\r\n    if (e.key === 'Enter') {\r\n      this.createAsset()\r\n    }\r\n  }\r\n\r\n  // the modal component for some reason after open focuses the panel itself\r\n  componentDidMount () {\r\n    setTimeout(() => this.refs.name.focus(), 0)\r\n  }\r\n\r\n  async createAsset (e) {\r\n    let entity = {}\r\n\r\n    if (!this.state.isLink && (!this.refs.name.value || this.refs.name.value.indexOf('.')) < 0) {\r\n      return this.setState({ error: 'name should include file extension, for example foo.js' })\r\n    }\r\n\r\n    if (this.props.options.defaults != null) {\r\n      entity = Object.assign(entity, this.props.options.defaults)\r\n    }\r\n\r\n    if (this.state.isLink) {\r\n      entity.link = this.refs.link.value\r\n      const fragments = entity.link.split('/')\r\n      entity.name = fragments[fragments.length - 1]\r\n    } else {\r\n      entity.name = this.refs.name.value\r\n    }\r\n\r\n    try {\r\n      if (Studio.workspaces) {\r\n        await Studio.workspaces.save()\r\n      }\r\n\r\n      let response = await Studio.api.post('/odata/assets', {\r\n        data: entity\r\n      })\r\n      response.__entitySet = 'assets'\r\n\r\n      Studio.addExistingEntity(response)\r\n      Studio.openTab(response)\r\n      this.props.close()\r\n    } catch (e) {\r\n      this.setState({ error: e.message })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { isLink, error } = this.state\r\n\r\n    return (\r\n      <div>\r\n        {isLink ? (\r\n          <div className='form-group'>\r\n            <label>Relative or absolute path to existing file</label>\r\n            <input type='text' name='link' ref='link' />\r\n          </div>\r\n        ) : (\r\n          <div className='form-group'>\r\n            <label>Name</label>\r\n            <input type='text' name='name' ref='name' placeholder='styles.css' onKeyPress={(e) => this.handleKeyPress(e)} />\r\n          </div>\r\n        )}\r\n        {Studio.extensions.assets.options.allowAssetsLinkedToFiles !== false ? (\r\n          <div className='form-group'>\r\n            <label>link to existing file</label>\r\n            <input\r\n              type='checkbox' checked={isLink}\r\n              onChange={() => this.setState({ isLink: !isLink })} />\r\n          </div>\r\n        ) : <div />}\r\n        <div className='form-group'>\r\n          <span\r\n            style={{color: 'red', display: error ? 'block' : 'none'}}>{error}</span>\r\n        </div>\r\n        <div className='form-group' style={{opacity: 0.8}}>\r\n          <hr />\r\n          <span>You can use assets to embed any kind of static content into report template.<br />\r\n            This can be for example css style, image, font, html or even javascript shared helpers. <br />See the <a\r\n              target='_blank' title='Help' href='http://jsreport.net/learn/assets'>documentation</a> for details.\r\n          </span>\r\n        </div>\r\n        <div className='button-bar'>\r\n          <button\r\n            className='button confirmation'\r\n            onClick={() => { this.props.close(); AssetUploadButton.OpenUploadNew(this.props.options.defaults) }}>Upload\r\n          </button>\r\n          <button onClick={() => this.createAsset()} className={'button confirmation'}>Ok</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNewAssetModal.propTypes = {\r\n  close: PropTypes.func.isRequired\r\n}\r\n","import React, { Component } from 'react'\nimport Studio from 'jsreport-studio'\n\nexport default class AssetProperties extends Component {\n  static title (entity, entities) {\n    return `asset ${entity.link ? '(link)' : ''}`\n  }\n\n  render () {\n    const { entity, onChange } = this.props\n\n    return (\n      <div>\n        {Studio.extensions.assets.options.allowAssetsLinkedToFiles !== false ? (\n          <div className='form-group'>\n            <label>link</label>\n            <input\n              type='text'\n              value={entity.link || ''}\n              onChange={(v) => onChange({ _id: entity._id, link: v.target.value })}\n            />\n          </div>\n        ) : <div />}\n        <div className='form-group'>\n          <label>shared helpers attached to each template</label>\n          <input\n            type='checkbox' checked={entity.isSharedHelper === true}\n            onChange={(v) => onChange({ _id: entity._id, isSharedHelper: v.target.checked })}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}